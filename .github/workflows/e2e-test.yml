name: E2E Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  e2e-test:
    name: E2E Tests (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        go-version: ["1.25"]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      
      - name: Install dependencies
        run: go mod download
      
      - name: Build wtp
        run: |
          if go tool -n task >/dev/null 2>&1; then
            go tool task build
          elif command -v task >/dev/null 2>&1 && [ -f Taskfile.yml ]; then
            task build
          else
            go build -o wtp ./cmd/wtp
          fi

      - name: Run unit tests
        run: |
          if go tool -n task >/dev/null 2>&1; then
            go tool task test
          elif command -v task >/dev/null 2>&1 && [ -f Taskfile.yml ]; then
            task test
          else
            go test -race -coverprofile=coverage.out -covermode=atomic ./...
          fi

      - name: Run E2E tests
        run: |
          if go tool -n task >/dev/null 2>&1; then
            go tool task test-e2e
          elif command -v task >/dev/null 2>&1 && [ -f Taskfile.yml ]; then
            task test-e2e
          else
            go test ./test/e2e -v
          fi
        env:
          WTP_E2E_BINARY: ./wtp
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.os }}
          path: |
            coverage.out
            test-results/
      
      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.out
          flags: e2e
          name: e2e-tests
